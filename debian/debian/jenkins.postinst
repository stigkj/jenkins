#!/bin/sh
# postinst script for jenkins
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
    
        [ -r /etc/default/jenkins ] && . /etc/default/jenkins
        : ${JENKINS_USER:=jenkins}

        # Create jenkins user if it doesn't exist.
        # sometimes tools that users want Jenkins to run need a shell,
        # so use /bin/bash. See JENKINS-4830
        if ! id $JENKINS_USER > /dev/null 2>&1 ; then
            adduser --system --home /var/lib/jenkins --no-create-home \
                --ingroup nogroup --disabled-password --shell /bin/bash \
                $JENKINS_USER
        fi
	
        # If we have an old hudson install, rename it to jenkins
        if test -d /var/lib/hudson -a \! \( -e /var/lib/hudson/.for-jenkins \) ; then
            # leave a marker to indicate this came from Hudson.
            # could be useful down the road
            # This also ensures that the .??* wildcard matches something
            touch /var/lib/hudson/.from-hudson
            mv -f /var/lib/hudson/* /var/lib/hudson/.??* /var/lib/jenkins
            rmdir /var/lib/hudson
            find /var/lib/jenkins -user hudson -exec chown $JENKINS_USER {} + || true
        fi
      
        # directories needed for jenkins
        # we don't do -R because it can take a long time on big installation
        chown $JENKINS_USER:adm /var/lib/jenkins /var/log/jenkins
        # we don't do "chmod 750" so that the user can choose the pemission for g and o on their own
        chmod u+rwx /var/lib/jenkins /var/log/jenkins

        # make sure jenkins can delete everything in /var/cache/jenkins to
        # re-explode war. older installations may use /var/run/jenkins
        # so make sure that they can delete too.
        chown -R $JENKINS_USER:adm /var/cache/jenkins /var/run/jenkins
        chmod -R 750               /var/cache/jenkins /var/run/jenkins
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0


